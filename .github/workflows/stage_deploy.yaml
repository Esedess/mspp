name: Stage Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - develop

env:
  DEPLOY_PATH: MSPP

jobs:
# 
  # build_and_push_image_to_github_packages:
  #   name: Push Docker image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2
  #       with:
  #         ref: develop

  #     - name: Login to Docker
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set variables
  #       run: |
  #         echo REP_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

  #     - name: Push to Docker Hub
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ env.REGISTRY }}/${{ env.REP_OWNER }}/${{ env.IMAGE_NAME }}:stage


  deploy:
    name: Deploy changes on server
    runs-on: ubuntu-latest
    environment:
      name: stage_deploy
    # needs: build_and_push_image_to_github_packages
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: develop

      # - name: Create SSH key
      #   # (SSH_KNOWN_HOSTS=ssh-keyscan -H сервер, SSH_PRIVATE_KEY - ключ с ПК, которому разрешен вход)
      #   run: |
      #     mkdir -p ~/.ssh
      #     chmod 700 ~/.ssh
      #     echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      #     chmod 644 ~/.ssh/known_hosts
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa

      # - name: Create folder for application
      #   run: ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} mkdir -p ${{ env.DEPLOY_PATH }}

      # - name: Deploy with scp
      #   run: scp -r infra/stage/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ env.DEPLOY_PATH }}

      # - name: Make envfile
      #   uses: SpicyPizza/create-envfile@v1.3
      #   with:
      #     envkey_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      #     directory: ${{ env.DEPLOY_PATH }}/stage/
      #     file_name: .env-stage
      #     fail_on_empty: false

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            mkdir -p ${{ env.DEPLOY_PATH }}
            cd ${{ env.DEPLOY_PATH }}
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env-stage
            cat ${{ env.DEPLOY_PATH }}/.env-stage

